version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile.prod
    environment:
      - NODE_ENV=production
      - IS_LOCAL=false
      - PORT=5000
    ports:
      - "5000:5000"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - app-network

  webrtc:
    build:
      context: .
      dockerfile: docker/webrtc/Dockerfile.prod
    environment:
      - NODE_ENV=production
      - IS_LOCAL=false
      - MEDIASOUP_WORKERS=3
      - RTC_MIN_PORT=10000
      - RTC_MAX_PORT=59999
      - API_ENDPOINT=http://api:5000
    ports:
      - "10000-59999:10000-59999/udp"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    depends_on:
      - api
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile.prod
    environment:
      - NODE_ENV=production
      - IS_LOCAL=false
    ports:
      - "80:80"
    restart: always
    volumes:
      - frontend-static:/usr/share/nginx/html
      - frontend-logs:/var/log/nginx
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - api
      - webrtc
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    ports:
      - "8088:80"
    volumes:
      - ./docker/frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend-static:/usr/share/nginx/html:ro
      - frontend-logs:/var/log/nginx
    depends_on:
      - frontend
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  frontend-static:
  frontend-logs:
